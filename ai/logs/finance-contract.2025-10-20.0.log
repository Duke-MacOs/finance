2025-10-20 10:05:02 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 10:05:02 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 78615 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 10:05:02 [main] INFO  c.o.f.FinanceContractApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-20 10:05:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 10:05:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 6 JPA repository interfaces.
2025-10-20 10:05:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-20 10:05:03 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-20 10:05:03 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 10:05:03 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 10:05:03 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 10:05:03 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 622 ms
2025-10-20 10:05:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:05:04 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.setDataSource(ClassicConfiguration.java:1094)
	at org.flywaydb.core.api.configuration.FluentConfiguration.dataSource(FluentConfiguration.java:624)
	at org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration.configureDataSource(FlywayAutoConfiguration.java:185)
	at org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration.flyway(FlywayAutoConfiguration.java:172)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: localhost
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 40 common frames omitted
2025-10-20 10:05:04 [main] INFO  o.f.c.i.license.VersionPrinter - Flyway Community Edition 9.22.3 by Redgate
2025-10-20 10:05:04 [main] INFO  o.f.c.i.license.VersionPrinter - See release notes here: https://rd.gt/416ObMi
2025-10-20 10:05:04 [main] INFO  o.f.c.i.license.VersionPrinter - 
2025-10-20 10:05:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:05:05 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:48)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.<init>(JdbcConnectionFactory.java:74)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:142)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:140)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: localhost
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 36 common frames omitted
2025-10-20 10:05:05 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

2025-10-20 10:05:05 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-20 10:05:05 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-20 10:05:05 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: org.flywaydb.core.internal.exception.FlywaySqlException: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:60)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.<init>(JdbcConnectionFactory.java:74)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:142)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:140)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 18 common frames omitted
Caused by: org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:48)
	... 24 common frames omitted
Caused by: java.net.UnknownHostException: localhost
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 36 common frames omitted
2025-10-20 10:06:18 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 10:06:18 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 79568 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 10:06:18 [main] INFO  c.o.f.FinanceContractApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-20 10:06:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 10:06:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 6 JPA repository interfaces.
2025-10-20 10:06:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-20 10:06:18 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-20 10:06:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 10:06:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 10:06:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 10:06:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 588 ms
2025-10-20 10:06:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:06:19 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.setDataSource(ClassicConfiguration.java:1094)
	at org.flywaydb.core.api.configuration.FluentConfiguration.dataSource(FluentConfiguration.java:624)
	at org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration.configureDataSource(FlywayAutoConfiguration.java:185)
	at org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration.flyway(FlywayAutoConfiguration.java:172)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: localhost
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 40 common frames omitted
2025-10-20 10:06:19 [main] INFO  o.f.c.i.license.VersionPrinter - Flyway Community Edition 9.22.3 by Redgate
2025-10-20 10:06:19 [main] INFO  o.f.c.i.license.VersionPrinter - See release notes here: https://rd.gt/416ObMi
2025-10-20 10:06:19 [main] INFO  o.f.c.i.license.VersionPrinter - 
2025-10-20 10:06:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:06:20 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:48)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.<init>(JdbcConnectionFactory.java:74)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:142)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:140)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: localhost
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 36 common frames omitted
2025-10-20 10:06:20 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

2025-10-20 10:06:20 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-20 10:06:20 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-20 10:06:20 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: org.flywaydb.core.internal.exception.FlywaySqlException: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:60)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.<init>(JdbcConnectionFactory.java:74)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:142)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:140)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 18 common frames omitted
Caused by: org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:48)
	... 24 common frames omitted
Caused by: java.net.UnknownHostException: localhost
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 36 common frames omitted
2025-10-20 10:06:39 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 10:06:39 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 79685 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 10:06:39 [main] INFO  c.o.f.FinanceContractApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-20 10:06:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 10:06:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 6 JPA repository interfaces.
2025-10-20 10:06:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-20 10:06:40 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-20 10:06:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 10:06:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 10:06:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 10:06:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 584 ms
2025-10-20 10:06:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:06:41 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.setDataSource(ClassicConfiguration.java:1094)
	at org.flywaydb.core.api.configuration.FluentConfiguration.dataSource(FluentConfiguration.java:624)
	at org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration.configureDataSource(FlywayAutoConfiguration.java:185)
	at org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration.flyway(FlywayAutoConfiguration.java:172)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 40 common frames omitted
2025-10-20 10:06:41 [main] INFO  o.f.c.i.license.VersionPrinter - Flyway Community Edition 9.22.3 by Redgate
2025-10-20 10:06:41 [main] INFO  o.f.c.i.license.VersionPrinter - See release notes here: https://rd.gt/416ObMi
2025-10-20 10:06:41 [main] INFO  o.f.c.i.license.VersionPrinter - 
2025-10-20 10:06:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:06:42 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:48)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.<init>(JdbcConnectionFactory.java:74)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:142)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:140)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 36 common frames omitted
2025-10-20 10:06:42 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

2025-10-20 10:06:42 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-20 10:06:42 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-20 10:06:42 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: org.flywaydb.core.internal.exception.FlywaySqlException: Unable to obtain connection from database: 尝试连线已失败。
---------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : 尝试连线已失败。

	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:60)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.<init>(JdbcConnectionFactory.java:74)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:142)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:140)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 18 common frames omitted
Caused by: org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:48)
	... 24 common frames omitted
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 36 common frames omitted
2025-10-20 10:07:25 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 10:07:25 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 79837 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 10:07:25 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 10:07:25 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 10:07:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 10:07:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 6 JPA repository interfaces.
2025-10-20 10:07:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 10:07:26 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 10:07:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 10:07:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 10:07:26 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 10:07:26 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 877 ms
2025-10-20 10:07:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:07:26 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 10:07:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 10:07:26 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 10:07:26 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 10:07:26 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 10:07:26 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 10:07:26 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 10:07:26 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 10:07:26 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 10:07:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 10:07:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 10:07:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 10:07:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 10:07:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 10:07:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:07:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:07:27 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 10:07:27 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 10:07:27 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 10:07:27 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:07:27 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:07:27 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:07:27 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:07:27 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 10:07:27 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 10:07:27 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 10:07:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 10:07:27 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.869 seconds (process running for 3.038)
2025-10-20 10:07:55 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 10:07:55 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 10:07:55 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-20 10:24:30 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 10:24:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 10:24:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 10:24:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 10:24:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 10:24:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 10:24:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 10:24:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 10:24:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 10:24:34 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 10:24:34 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 80756 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 10:24:34 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 10:24:34 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 10:24:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 10:24:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 6 JPA repository interfaces.
2025-10-20 10:24:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 10:24:35 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 10:24:35 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 10:24:35 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 10:24:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 10:24:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 586 ms
2025-10-20 10:24:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:24:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 10:24:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 10:24:35 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 10:24:35 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 10:24:35 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 10:24:35 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 10:24:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 10:24:35 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 10:24:36 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:24:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:24:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 10:24:36 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 10:24:36 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 10:24:36 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:24:36 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:24:36 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:24:36 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:24:36 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 10:24:36 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 10:24:37 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 10:24:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 10:24:37 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.661 seconds (process running for 2.936)
2025-10-20 10:25:05 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 10:25:05 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 10:25:05 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-20 10:25:09 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 10:25:09 [http-nio-8082-exec-2] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:25:09 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:25:09 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 10:25:09 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 10:25:09 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:25:09 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:25:09 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:25:09 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:25:10 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 10:25:10 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 153ms，文本长度: 2052
2025-10-20 10:25:10 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 10:25:10 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 155ms
2025-10-20 10:25:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 10:25:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 10:25:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=null, endDate=null, partyB=（承租, contractAmount=null, _aiParsed=false, startDate=null, _parseMessage=使用关键字匹配解析完成}
2025-10-20 10:25:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 10:25:10 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 10:26:03 [http-nio-8082-exec-4] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 10:26:03 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 10:26:03 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:26:03 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:26:03 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:26:03 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:26:03 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 10:26:03 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 15ms，文本长度: 2052
2025-10-20 10:26:03 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 16ms
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=null, endDate=null, partyB=（承租, contractAmount=null, _aiParsed=false, startDate=null, _parseMessage=使用关键字匹配解析完成}
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 10:26:03 [http-nio-8082-exec-4] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 10:26:34 [http-nio-8082-exec-6] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 10:26:34 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 10:26:34 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:26:34 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:26:34 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:26:34 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:26:34 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 10:26:34 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 13ms，文本长度: 2052
2025-10-20 10:26:34 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 14ms
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=null, endDate=null, partyB=（承租, contractAmount=null, _aiParsed=false, startDate=null, _parseMessage=使用关键字匹配解析完成}
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 10:26:34 [http-nio-8082-exec-6] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 10:27:27 [http-nio-8082-exec-8] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 10:27:27 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 10:27:27 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:27:27 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:27:27 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:27:27 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:27:27 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 10:27:27 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 13ms，文本长度: 2052
2025-10-20 10:27:27 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 14ms
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=null, endDate=null, partyB=（承租, contractAmount=null, _aiParsed=false, startDate=null, _parseMessage=使用关键字匹配解析完成}
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 10:27:27 [http-nio-8082-exec-8] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 10:29:07 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 10:29:07 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 82531 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 10:29:07 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 10:29:07 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 10:29:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 10:29:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 6 JPA repository interfaces.
2025-10-20 10:29:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 10:29:07 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 10:29:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 10:29:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 10:29:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 10:29:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 579 ms
2025-10-20 10:29:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:29:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 10:29:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 10:29:08 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 10:29:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 10:29:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 10:29:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 10:29:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 10:29:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 10:29:08 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:29:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:29:08 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 10:29:08 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 10:29:08 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 10:29:08 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 10:29:08 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 10:29:08 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 10:29:08 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 10:29:08 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 10:29:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 10:29:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 10:29:09 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 10:29:09 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 10:29:09 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:29:09 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:29:09 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:29:09 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:29:09 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 10:29:09 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 10:29:09 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 10:29:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 10:29:09 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.551 seconds (process running for 2.716)
2025-10-20 10:29:30 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 10:29:30 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 10:29:30 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-10-20 10:29:30 [http-nio-8082-exec-1] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:29:30 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 10:29:30 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 10:29:30 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:29:30 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:29:30 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:29:30 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:29:30 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 10:29:30 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 117ms，文本长度: 2052
2025-10-20 10:29:30 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 10:29:30 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 118ms
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 10:29:37 [http-nio-8082-exec-2] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 10:29:37 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 10:29:37 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:29:37 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:29:37 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:29:37 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:29:37 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 10:29:37 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 19ms，文本长度: 2052
2025-10-20 10:29:37 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 19ms
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=null, partyB=史密斯净水设备有限公司, contractAmount=null, _aiParsed=false, startDate=null, _parseMessage=使用关键字匹配解析完成}
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 10:29:37 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 10:30:23 [http-nio-8082-exec-4] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 10:30:23 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 10:30:23 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:30:23 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:30:23 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:30:23 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:30:23 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 10:30:23 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 12ms，文本长度: 2052
2025-10-20 10:30:23 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 12ms
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=null, partyB=史密斯净水设备有限公司, contractAmount=null, _aiParsed=false, startDate=null, _parseMessage=使用关键字匹配解析完成}
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 10:30:23 [http-nio-8082-exec-4] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 10:43:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 10:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 10:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 10:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 10:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 10:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 10:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 10:43:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 10:43:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 10:43:56 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 10:43:56 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 84852 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 10:43:56 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 10:43:56 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 10:43:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 10:43:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 6 JPA repository interfaces.
2025-10-20 10:43:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 10:43:57 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 10:43:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 10:43:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 10:43:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 10:43:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 583 ms
2025-10-20 10:43:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 10:43:57 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 10:43:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 10:43:57 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 10:43:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 10:43:57 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 10:43:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 10:43:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 10:43:57 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 10:43:57 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:43:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 10:43:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 10:43:58 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 10:43:58 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 10:43:58 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 10:43:58 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 10:43:58 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 10:43:58 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 10:43:58 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 10:43:58 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 10:43:58 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 10:43:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 10:43:58 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.816 seconds (process running for 2.985)
2025-10-20 10:57:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 10:57:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 10:57:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 10:57:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 10:57:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 10:57:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 10:57:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 10:57:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 10:57:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 11:09:12 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 11:09:12 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 87792 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 11:09:12 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 11:09:12 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 11:09:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 11:09:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 6 JPA repository interfaces.
2025-10-20 11:09:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 11:09:12 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 11:09:12 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 11:09:12 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 11:09:12 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 11:09:12 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 589 ms
2025-10-20 11:09:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 11:09:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 11:09:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 11:09:13 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 11:09:13 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 11:09:13 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 11:09:13 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 11:09:13 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 11:09:13 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 11:09:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:09:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:09:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:09:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 11:09:14 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 11:09:14 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:09:14 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:09:14 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:09:14 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:09:14 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 11:09:14 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 11:09:14 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 11:09:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 11:09:14 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.574 seconds (process running for 2.964)
2025-10-20 11:09:35 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 11:09:35 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 11:09:35 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-20 11:10:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:10:21 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:10:21 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:10:21 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:10:21 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:10:21 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:10:21 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:10:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 11:10:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 11:11:18 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 11:11:18 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 88958 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 11:11:18 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 11:11:18 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 11:11:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 11:11:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 6 JPA repository interfaces.
2025-10-20 11:11:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 11:11:18 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 11:11:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 11:11:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 11:11:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 11:11:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 598 ms
2025-10-20 11:11:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 11:11:18 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 11:11:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 11:11:18 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 11:11:18 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 11:11:18 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 11:11:18 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 11:11:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 11:11:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 11:11:19 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:11:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:11:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:11:19 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 11:11:20 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 11:11:20 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:11:20 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:11:20 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:11:20 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:11:20 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 11:11:20 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 11:11:20 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 11:11:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 11:11:20 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.598 seconds (process running for 2.779)
2025-10-20 11:11:44 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 11:11:44 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 11:11:44 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:11:59 [http-nio-8082-exec-2] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:11:59 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:11:59 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:11:59 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:11:59 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:11:59 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:11:59 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:11:59 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 139ms，文本长度: 2052
2025-10-20 11:11:59 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 141ms
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:11:59 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:12:08 [http-nio-8082-exec-3] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:12:08 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:12:08 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:12:08 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:12:08 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:12:08 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:12:08 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:12:08 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 13ms，文本长度: 2052
2025-10-20 11:12:08 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 13ms
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:12:08 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:13:11 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:13:11 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:13:11 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:13:11 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:13:11 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:13:11 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:13:11 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:13:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 11:13:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 11:13:50 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 11:13:50 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 90828 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 11:13:50 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 11:13:50 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 11:13:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 11:13:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 6 JPA repository interfaces.
2025-10-20 11:13:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 11:13:50 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 11:13:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 11:13:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 11:13:51 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 11:13:51 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 564 ms
2025-10-20 11:13:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 11:13:51 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 11:13:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 11:13:51 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 11:13:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 11:13:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 11:13:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 11:13:51 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 11:13:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 11:13:51 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:13:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:13:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:13:52 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 11:13:52 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 11:13:52 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:13:52 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:13:52 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:13:52 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:13:52 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 11:13:52 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 11:13:52 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 11:13:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 11:13:52 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.436 seconds (process running for 2.59)
2025-10-20 11:14:03 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 11:14:03 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 11:14:03 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:14:10 [http-nio-8082-exec-2] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:14:10 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:14:10 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:14:10 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:14:10 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:14:10 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:14:10 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:14:10 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 129ms，文本长度: 2052
2025-10-20 11:14:10 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 129ms
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:14:10 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:14:30 [http-nio-8082-exec-3] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:14:30 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:14:30 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:14:30 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:14:30 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:14:30 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:14:30 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:14:30 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 19ms，文本长度: 2052
2025-10-20 11:14:30 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 19ms
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:14:30 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:15:24 [http-nio-8082-exec-5] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:15:24 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:15:24 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:15:24 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:15:24 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:15:24 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:15:24 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:15:24 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 12ms，文本长度: 2052
2025-10-20 11:15:24 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 12ms
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:15:24 [http-nio-8082-exec-5] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:16:11 [http-nio-8082-exec-6] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:16:11 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:16:11 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:16:11 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:16:11 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:16:11 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:16:11 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:16:11 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 10ms，文本长度: 2052
2025-10-20 11:16:11 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 10ms
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:16:11 [http-nio-8082-exec-6] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同2.pdf, 文件大小: 94701 bytes
2025-10-20 11:19:09 [http-nio-8082-exec-8] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同2.pdf
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同2.pdf
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94701 bytes
2025-10-20 11:19:09 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94701 bytes
2025-10-20 11:19:09 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:19:09 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:19:09 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:19:09 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:19:09 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:19:09 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 18ms，文本长度: 1794
2025-10-20 11:19:09 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1794
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 19ms
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=13.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:19:09 [http-nio-8082-exec-8] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同2.pdf, 文件大小: 94701 bytes
2025-10-20 11:19:20 [http-nio-8082-exec-9] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同2.pdf
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同2.pdf
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94701 bytes
2025-10-20 11:19:20 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94701 bytes
2025-10-20 11:19:20 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:19:20 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:19:20 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:19:20 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:19:20 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:19:20 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 20ms，文本长度: 1794
2025-10-20 11:19:20 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1794
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 20ms
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=13.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:19:20 [http-nio-8082-exec-9] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:19:28 [http-nio-8082-exec-10] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:19:28 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:19:28 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:19:28 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:19:28 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:19:28 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:19:28 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:19:28 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 15ms，文本长度: 2052
2025-10-20 11:19:28 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 15ms
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:19:28 [http-nio-8082-exec-10] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:22:22 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:22:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:22:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:22:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:22:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:22:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:22:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:22:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 11:22:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 11:23:04 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 11:23:04 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 92530 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 11:23:04 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 11:23:04 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 11:23:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 11:23:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 6 JPA repository interfaces.
2025-10-20 11:23:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 11:23:04 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 11:23:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 11:23:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 11:23:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 11:23:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 628 ms
2025-10-20 11:23:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 11:23:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 11:23:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 11:23:04 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 11:23:05 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 11:23:05 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 11:23:05 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 11:23:05 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 11:23:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 11:23:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:23:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:23:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:23:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 11:23:06 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 11:23:06 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:23:06 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:23:06 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:23:06 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:23:06 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 11:23:06 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 11:23:06 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 11:23:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 11:23:06 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.676 seconds (process running for 2.852)
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:23:26 [http-nio-8082-exec-1] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:23:26 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:23:26 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:23:26 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:23:26 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:23:26 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:23:26 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:23:26 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 445ms，文本长度: 2052
2025-10-20 11:23:26 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 452ms
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:23:26 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同2.pdf, 文件大小: 94701 bytes
2025-10-20 11:23:36 [http-nio-8082-exec-2] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同2.pdf
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同2.pdf
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94701 bytes
2025-10-20 11:23:36 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94701 bytes
2025-10-20 11:23:36 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:23:36 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:23:36 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:23:36 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:23:36 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:23:36 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 58ms，文本长度: 1794
2025-10-20 11:23:36 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1794
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 67ms
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=13.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:23:36 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 文档2.pdf, 文件大小: 94730 bytes
2025-10-20 11:25:17 [http-nio-8082-exec-4] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 文档2.pdf
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 文档2.pdf
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94730 bytes
2025-10-20 11:25:17 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94730 bytes
2025-10-20 11:25:17 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:25:17 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:25:17 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:25:17 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:25:17 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:25:17 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 15ms，文本长度: 1793
2025-10-20 11:25:17 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1793
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 15ms
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-08-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:25:17 [http-nio-8082-exec-4] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 文档2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:27:16 [http-nio-8082-exec-6] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:27:16 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:27:16 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:27:16 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:27:16 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:27:16 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:27:16 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:27:16 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 9ms，文本长度: 2052
2025-10-20 11:27:16 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 9ms
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:27:16 [http-nio-8082-exec-6] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:28:42 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 11:28:42 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 93447 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 11:28:42 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 11:28:42 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 11:28:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 11:28:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 6 JPA repository interfaces.
2025-10-20 11:28:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 11:28:43 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 11:28:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 11:28:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 11:28:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 11:28:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 802 ms
2025-10-20 11:28:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 11:28:43 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 11:28:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 11:28:43 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 11:28:43 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 11:28:43 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 11:28:43 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 11:28:43 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 11:28:43 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 11:28:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:28:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:28:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:28:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:28:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:28:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:28:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:28:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 11:28:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 11:28:44 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:28:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:28:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:28:44 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 11:28:45 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 11:28:45 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:28:45 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:28:45 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:28:45 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:28:45 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 11:28:45 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 11:28:45 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 11:28:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 11:28:45 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.879 seconds (process running for 3.053)
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:29:02 [http-nio-8082-exec-1] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:29:02 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:29:02 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:29:02 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:29:02 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:29:02 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:29:02 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:29:02 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 113ms，文本长度: 2052
2025-10-20 11:29:02 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 116ms
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:29:02 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:29:10 [http-nio-8082-exec-2] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:29:10 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:29:10 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:29:10 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:29:10 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:29:10 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:29:10 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:29:10 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 12ms，文本长度: 2052
2025-10-20 11:29:10 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 12ms
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:29:10 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 文档2.pdf, 文件大小: 94730 bytes
2025-10-20 11:29:26 [http-nio-8082-exec-3] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 文档2.pdf
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 文档2.pdf
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94730 bytes
2025-10-20 11:29:26 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94730 bytes
2025-10-20 11:29:26 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:29:26 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:29:26 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:29:26 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:29:26 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:29:26 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 37ms，文本长度: 1793
2025-10-20 11:29:26 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1793
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 41ms
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-08-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:29:26 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 文档2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:30:13 [http-nio-8082-exec-4] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 文档2.pdf, 文件大小: 94730 bytes
2025-10-20 11:30:13 [http-nio-8082-exec-4] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 文档2.pdf
2025-10-20 11:30:13 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 文档2.pdf
2025-10-20 11:30:13 [http-nio-8082-exec-4] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94730 bytes
2025-10-20 11:30:14 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94730 bytes
2025-10-20 11:30:14 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:30:14 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:30:14 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:30:14 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:30:14 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:30:14 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 110ms，文本长度: 1793
2025-10-20 11:30:14 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1793
2025-10-20 11:30:14 [http-nio-8082-exec-4] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 129ms
2025-10-20 11:30:14 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:30:14 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:30:14 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:30:14 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-08-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:30:14 [http-nio-8082-exec-4] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:30:14 [http-nio-8082-exec-4] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 文档2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:39:42 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:39:42 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:39:42 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:39:42 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:39:42 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:39:42 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:39:42 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:39:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 11:39:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 11:40:35 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 11:40:35 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 95206 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 11:40:35 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 11:40:35 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 11:40:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 11:40:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 6 JPA repository interfaces.
2025-10-20 11:40:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 11:40:36 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 11:40:36 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 11:40:36 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 11:40:36 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 11:40:36 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 580 ms
2025-10-20 11:40:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 11:40:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 11:40:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 11:40:36 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 11:40:36 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 11:40:36 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 11:40:36 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 11:40:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 11:40:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 11:40:37 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:40:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:40:37 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:40:37 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 11:40:38 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 11:40:38 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:40:38 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:40:38 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:40:38 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:40:38 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 11:40:38 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 11:40:38 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 11:40:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 11:40:38 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.882 seconds (process running for 3.056)
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:40:56 [http-nio-8082-exec-1] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:40:56 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:40:56 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:40:56 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:40:56 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:40:56 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:40:56 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:40:56 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 125ms，文本长度: 2052
2025-10-20 11:40:56 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 127ms
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:40:56 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:42:25 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:42:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:42:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:42:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:42:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:42:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:42:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:42:25 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 11:42:25 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 11:45:15 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 11:45:15 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 97808 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 11:45:15 [main] DEBUG c.o.f.FinanceContractApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-10-20 11:45:15 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "demo"
2025-10-20 11:45:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 11:45:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 6 JPA repository interfaces.
2025-10-20 11:45:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 11:45:15 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 11:45:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 11:45:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 11:45:16 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 11:45:16 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 606 ms
2025-10-20 11:45:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 11:45:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 11:45:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 11:45:16 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 11:45:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 11:45:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 11:45:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 11:45:16 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 11:45:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 11:45:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        entered_cr numeric(15,2) not null,
        entered_dr numeric(15,2) not null,
        is_deleted boolean not null,
        version integer not null,
        accounting_date timestamp(6) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr_currency varchar(8) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        accounting_no varchar(32) not null,
        created_by varchar(32) not null,
        gl_account varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        amortization_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_posted boolean not null,
        version integer not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        schedule_no varchar(32) not null,
        updated_by varchar(32),
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        contract_all_amount numeric(15,2) not null,
        is_deleted boolean not null,
        is_finished boolean not null,
        version integer not null,
        contract_all_currency varchar(8) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        created_date timestamp(6) not null,
        file_id bigint not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        contract_alias varchar(128) not null unique,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        contract_description varchar(256) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        is_deleted boolean not null,
        version integer not null,
        contract_id bigint not null unique,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        updated_by varchar(32),
        account_info text,
        amortization_schedule_info text,
        base_info text,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        reserved_field text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        is_deleted boolean not null,
        version integer not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        file_type varchar(32) not null,
        updated_by varchar(32),
        file_name varchar(128) not null,
        file_data bytea not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        is_deleted boolean not null,
        payment_amount numeric(15,2) not null,
        version integer not null,
        contract_id bigint not null,
        created_date timestamp(6) not null,
        id bigint generated by default as identity,
        payment_amount_currency varchar(8) not null,
        payment_date timestamp(6) not null,
        updated_date timestamp(6),
        created_by varchar(32) not null,
        payment_condition varchar(32) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        updated_by varchar(32),
        milestone varchar(128) not null,
        reserved_field text,
        primary key (id)
    )
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:45:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 11:45:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 11:45:17 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 11:45:17 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 11:45:17 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:45:17 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:45:17 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:45:17 [main] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:45:17 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 11:45:17 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 11:45:17 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 11:45:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 11:45:18 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.88 seconds (process running for 3.062)
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 文档2.pdf, 文件大小: 94730 bytes
2025-10-20 11:45:24 [http-nio-8082-exec-1] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 文档2.pdf
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 文档2.pdf
2025-10-20 11:45:24 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94730 bytes
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94730 bytes
2025-10-20 11:45:24 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:45:24 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:45:24 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:45:24 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:45:24 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:45:24 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 140ms，文本长度: 1793
2025-10-20 11:45:24 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1793
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 142ms
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-08-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:45:24 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 文档2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 11:45:38 [http-nio-8082-exec-2] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 11:45:38 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 11:45:38 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:45:38 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:45:38 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:45:38 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:45:38 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 4，处理页数: 4
2025-10-20 11:45:38 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 29ms，文本长度: 2052
2025-10-20 11:45:38 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 30ms
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 ...
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-06-30, partyB=史密斯净水设备有限公司, contractAmount=6,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:45:38 [http-nio-8082-exec-2] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 文档2.pdf, 文件大小: 94730 bytes
2025-10-20 11:46:03 [http-nio-8082-exec-3] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 文档2.pdf
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 文档2.pdf
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94730 bytes
2025-10-20 11:46:03 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94730 bytes
2025-10-20 11:46:03 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:46:03 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:46:03 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:46:03 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:46:03 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:46:03 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 15ms，文本长度: 1793
2025-10-20 11:46:03 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1793
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 16ms
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-08-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:46:03 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 文档2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 文档2.pdf, 文件大小: 94730 bytes
2025-10-20 11:49:42 [http-nio-8082-exec-5] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 文档2.pdf
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 文档2.pdf
2025-10-20 11:49:42 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94730 bytes
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94730 bytes
2025-10-20 11:49:42 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:49:42 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:49:42 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:49:42 [PDF-Processing-2] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:49:42 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:49:42 [PDF-Processing-2] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 23ms，文本长度: 1793
2025-10-20 11:49:42 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1793
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 23ms
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-08-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:49:42 [http-nio-8082-exec-5] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 文档2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 文档2.pdf, 文件大小: 94730 bytes
2025-10-20 11:57:38 [http-nio-8082-exec-7] DEBUG c.o.f.c.ContractParseController - 文件验证通过: 文档2.pdf
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 文档2.pdf
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94730 bytes
2025-10-20 11:57:38 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94730 bytes
2025-10-20 11:57:38 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 开始配置PDFBox优化设置
2025-10-20 11:57:38 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已通过SLF4J/Logback禁用字体相关日志
2025-10-20 11:57:38 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - 已禁用所有字体相关日志
2025-10-20 11:57:38 [PDF-Processing-1] DEBUG c.o.finance.util.PDFBoxConfigManager - PDFBox优化配置已应用
2025-10-20 11:57:38 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - PDF文档页数: 2，处理页数: 2
2025-10-20 11:57:38 [PDF-Processing-1] DEBUG c.o.finance.service.ContractService - 优化PDFBox提取完成，耗时: 14ms，文本长度: 1793
2025-10-20 11:57:38 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1793
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 14ms
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: none
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - 使用关键字匹配解析合同
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - PDF文本内容预览: ======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：...
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - 关键字匹配结果: {taxRate=6.0, endDate=2025-08-30, partyB=史密斯净水设备有限公司, contractAmount=8,000.00, _aiParsed=false, startDate=2025-01-01, _parseMessage=使用关键字匹配解析完成}
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用关键字匹配解析完成
2025-10-20 11:57:38 [http-nio-8082-exec-7] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 文档2.pdf, AI解析: false, 状态: SUCCESS
2025-10-20 12:22:40 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m53s622ms).
2025-10-20 12:24:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 12:24:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_accounting_entry cascade 
2025-10-20 12:24:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_amortization_schedule cascade 
2025-10-20 12:24:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract cascade 
2025-10-20 12:24:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_contract_details cascade 
2025-10-20 12:24:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_original_contract cascade 
2025-10-20 12:24:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists tbl_payment_schedule cascade 
2025-10-20 12:24:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-20 12:24:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-20 13:06:53 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 13:06:53 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 1658 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 13:06:53 [main] INFO  c.o.f.FinanceContractApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-20 13:06:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 13:06:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 6 JPA repository interfaces.
2025-10-20 13:06:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-20 13:06:54 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-20 13:06:54 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 13:06:54 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 13:06:54 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 13:06:54 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 567 ms
2025-10-20 13:06:54 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 13:06:54 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 13:06:54 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 13:06:54 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 13:06:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 13:06:55 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 50 common frames omitted
2025-10-20 13:06:55 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
2025-10-20 13:06:55 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 13:06:56 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 13:06:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 13:06:57 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:185)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:98)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 54 common frames omitted
2025-10-20 13:06:57 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08001
2025-10-20 13:06:57 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - 尝试连线已失败。
2025-10-20 13:06:57 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
2025-10-20 13:06:57 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
2025-10-20 13:06:57 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-20 13:06:57 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-20 13:06:57 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 16 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:185)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:98)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 40 common frames omitted
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 54 common frames omitted
2025-10-20 13:07:44 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 13:07:44 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 2070 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 13:07:44 [main] INFO  c.o.f.FinanceContractApplication - The following 1 profile is active: "dev"
2025-10-20 13:07:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 13:07:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 6 JPA repository interfaces.
2025-10-20 13:07:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-20 13:07:45 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-20 13:07:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 13:07:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 13:07:45 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 13:07:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 572 ms
2025-10-20 13:07:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 13:07:45 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 13:07:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 13:07:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 13:07:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 13:07:46 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 50 common frames omitted
2025-10-20 13:07:46 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
2025-10-20 13:07:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 13:07:47 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 13:07:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 13:07:48 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:185)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:98)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 54 common frames omitted
2025-10-20 13:07:48 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08001
2025-10-20 13:07:48 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - 尝试连线已失败。
2025-10-20 13:07:48 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
2025-10-20 13:07:48 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
2025-10-20 13:07:48 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-20 13:07:48 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-20 13:07:48 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 16 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:185)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:98)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 40 common frames omitted
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 54 common frames omitted
2025-10-20 13:52:51 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 13:52:51 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 4011 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 13:52:51 [main] INFO  c.o.f.FinanceContractApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-20 13:52:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 13:52:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 6 JPA repository interfaces.
2025-10-20 13:52:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 13:52:51 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 13:52:51 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 13:52:51 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 13:52:51 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 13:52:51 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 678 ms
2025-10-20 13:52:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 13:52:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 13:52:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 13:52:51 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 13:52:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 13:52:53 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 50 common frames omitted
2025-10-20 13:52:53 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
2025-10-20 13:52:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 13:52:53 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 13:52:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 13:52:54 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:185)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:98)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 54 common frames omitted
2025-10-20 13:52:54 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08001
2025-10-20 13:52:54 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - 尝试连线已失败。
2025-10-20 13:52:54 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
2025-10-20 13:52:54 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
2025-10-20 13:52:54 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-20 13:52:54 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-20 13:52:54 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.ocbc.finance.FinanceContractApplication.main(FinanceContractApplication.java:16)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 16 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [尝试连线已失败。] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:185)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:98)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: 尝试连线已失败。
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 40 common frames omitted
Caused by: java.net.UnknownHostException: 127.0.0.1
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 54 common frames omitted
2025-10-20 13:53:44 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-20 13:53:44 [main] INFO  c.o.f.FinanceContractApplication - Starting FinanceContractApplication using Java 23.0.2 with PID 4136 (/Users/victor/Desktop/ocbc/ms-finance-contract-feature-init/target/classes started by victor in /Users/victor/Desktop/ocbc/ms-finance-contract-feature-init)
2025-10-20 13:53:44 [main] INFO  c.o.f.FinanceContractApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-20 13:53:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-20 13:53:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 6 JPA repository interfaces.
2025-10-20 13:53:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-10-20 13:53:45 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-10-20 13:53:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-20 13:53:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-10-20 13:53:45 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-20 13:53:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 634 ms
2025-10-20 13:53:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-20 13:53:45 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-20 13:53:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-20 13:53:45 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-20 13:53:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-20 13:53:45 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.0.Final
2025-10-20 13:53:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-20 13:53:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-20 13:53:45 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-20 13:53:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    create table tbl_accounting_entry (
        id bigint generated by default as identity,
        created_by varchar(32) not null,
        created_date timestamp(6) not null,
        is_deleted boolean not null,
        reserved_field text,
        updated_by varchar(32),
        updated_date timestamp(6),
        version integer not null,
        accounting_date timestamp(6) not null,
        accounting_no varchar(32) not null,
        amortization_schedule_id bigint,
        booking_date timestamp(6) not null,
        contract_id bigint not null,
        entered_cr numeric(15,2) not null,
        entered_cr_currency varchar(8) not null,
        entered_dr numeric(15,2) not null,
        entered_dr_currency varchar(8) not null,
        gl_account varchar(32) not null,
        primary key (id)
    )
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    create table tbl_amortization_schedule (
        id bigint generated by default as identity,
        created_by varchar(32) not null,
        created_date timestamp(6) not null,
        is_deleted boolean not null,
        reserved_field text,
        updated_by varchar(32),
        updated_date timestamp(6),
        version integer not null,
        amortization_amount numeric(15,2) not null,
        amortization_amount_currency varchar(8) not null,
        contract_id bigint not null,
        is_posted boolean not null,
        post_date timestamp(6) not null,
        schedule_date timestamp(6) not null,
        schedule_no varchar(32) not null,
        primary key (id)
    )
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract (
        id bigint generated by default as identity,
        created_by varchar(32) not null,
        created_date timestamp(6) not null,
        is_deleted boolean not null,
        reserved_field text,
        updated_by varchar(32),
        updated_date timestamp(6),
        version integer not null,
        contract_alias varchar(128) not null,
        contract_all_amount numeric(15,2) not null,
        contract_all_currency varchar(8) not null,
        contract_description varchar(256) not null,
        contract_name varchar(128) not null,
        contract_no varchar(128) not null,
        contract_valid_end_date timestamp(6) not null,
        contract_valid_start_date timestamp(6) not null,
        file_id bigint not null,
        is_finished boolean not null,
        party_a varchar(128) not null,
        party_a_id varchar(128) not null,
        party_b varchar(128) not null,
        party_b_id varchar(128) not null,
        primary key (id)
    )
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    create table tbl_contract_details (
        id bigint generated by default as identity,
        created_by varchar(32) not null,
        created_date timestamp(6) not null,
        is_deleted boolean not null,
        reserved_field text,
        updated_by varchar(32),
        updated_date timestamp(6),
        version integer not null,
        account_info text,
        amortization_schedule_info text,
        base_info text,
        contract_id bigint not null,
        fee_info text,
        finance_info text,
        payment_schedule_info text,
        risk_info text,
        settlement_info text,
        tax_info text,
        time_info text,
        primary key (id)
    )
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    create table tbl_original_contract (
        id bigint generated by default as identity,
        created_by varchar(32) not null,
        created_date timestamp(6) not null,
        is_deleted boolean not null,
        reserved_field text,
        updated_by varchar(32),
        updated_date timestamp(6),
        version integer not null,
        file_data bytea not null,
        file_name varchar(128) not null,
        file_type varchar(32) not null,
        primary key (id)
    )
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    create table tbl_payment_schedule (
        id bigint generated by default as identity,
        created_by varchar(32) not null,
        created_date timestamp(6) not null,
        is_deleted boolean not null,
        reserved_field text,
        updated_by varchar(32),
        updated_date timestamp(6),
        version integer not null,
        contract_id bigint not null,
        milestone varchar(128) not null,
        payment_amount numeric(15,2) not null,
        payment_amount_currency varchar(8) not null,
        payment_condition varchar(32) not null,
        payment_date timestamp(6) not null,
        schedule_no varchar(32) not null,
        status varchar(32) not null,
        primary key (id)
    )
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       drop constraint if exists UK_e8hq4ktl3bo084e6q6sig3758
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint UK_e8hq4ktl3bo084e6q6sig3758 unique (contract_alias)
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       drop constraint if exists UK_74oxg1a6pj6aslqthg1656d48
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint UK_74oxg1a6pj6aslqthg1656d48 unique (contract_id)
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK5p859vo43i6r2n09aix4w7xir 
       foreign key (amortization_schedule_id) 
       references tbl_amortization_schedule
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_accounting_entry 
       add constraint FK9sw62439snbsfhpg9mx4irkmy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_amortization_schedule 
       add constraint FKryjfigmyhda4hb9lx59gr1uv6 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract 
       add constraint FKq2ujtsjj17yvnmuh6cw4b7445 
       foreign key (file_id) 
       references tbl_original_contract
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_contract_details 
       add constraint FKii6c4g3q6ifvhbs8qyay47vdh 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 13:53:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists tbl_payment_schedule 
       add constraint FK4f3hutmotojk7xd52omissrpy 
       foreign key (contract_id) 
       references tbl_contract
2025-10-20 13:53:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-20 13:53:46 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-20 13:53:46 [main] INFO  c.o.finance.config.ThreadPoolConfig - PDF处理线程池初始化完成 - 核心线程数: 2, 最大线程数: 5, 队列容量: 10
2025-10-20 13:53:46 [main] INFO  c.o.finance.util.PDFBoxConfigManager - PDFBox配置管理器已初始化
2025-10-20 13:53:46 [main] INFO  c.o.finance.config.ThreadPoolConfig - 通用异步任务线程池初始化完成 - 核心线程数: 4, 最大线程数: 10, 队列容量: 20
2025-10-20 13:53:46 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-10-20 13:53:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path ''
2025-10-20 13:53:46 [main] INFO  c.o.f.FinanceContractApplication - Started FinanceContractApplication in 2.602 seconds (process running for 2.773)
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 文档2.pdf, 文件大小: 94730 bytes
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 文档2.pdf
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 94730 bytes
2025-10-20 13:54:11 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 94730 bytes
2025-10-20 13:54:11 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 1793
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 145ms
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: deepseek
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - 开始调用DeepSeek AI解析合同，文本长度: 1793 字符
2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI 请求提示词: 请深刻理解以下合同内容，并以JSON格式返回合同中的关键财务信息。

合同内容：
======================================================== 
======================== 
净水器设备租赁合同 
======================================================== 
======================== 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 30 日 
--------------------------------------------------------------------------- 
----- 
合同双方信息 
--------------------------------------------------------------------------- 
----- 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
乙方（承租方）：史密斯净水设备有限公司 
地址：上海市徐汇区漕河泾开发区桂平路 481 号 
联系电话：021-66666666 
法定代表人：史密斯 
--------------------------------------------------------------------------- 
----- 
合同正文--------------------------------------------------------------------------- 
----- 
根据《中华人民共和国合同法》及相关法律法规，甲乙双方在平等、自愿、公平、 
诚实信用的基础上，就净水器设备租赁事宜达成如下协议： 
第一条 租赁设备 
甲方同意将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1 台）出租给 
乙方使用。设备包括主机、滤芯、管路等全套配件。 
第二条 租赁期限 
1. 租赁期限自 2025-01-01 起至 2025-08-30 止，共计 8 个月。 
第三条 租金及支付方式 
1. 租赁总金额为人民币 8,000.00 元（含税）。 
2. 月租金为人民币 1,000.00 元。 
3. 税率为 6.0%。 
4. 乙方应于每月 1 日前支付当月租金。 
第四条 甲方权利义务 
1. 甲方保证所出租设备的合法性和完好性。 
2. 甲方负责设备的安装调试和技术培训。 
3. 甲方提供设备保修服务，保修期内免费维修。 
第五条 乙方权利义务 
1. 乙方有权在租赁期内正常使用租赁设备。 
2. 乙方应按时支付租金，不得拖欠。3. 乙方应妥善保管设备，不得擅自拆卸或转租。 
第六条 违约责任 
任何一方违反本合同约定，应承担相应的违约责任，并赔偿对方因此遭受的损失。 
第七条 争议解决 
因本合同引起的争议，双方应友好协商解决；协商不成的，提交上海仲裁委员会 
仲裁。 
第八条 其他 
本合同一式两份，甲乙双方各执一份，具有同等法律效力。 
--------------------------------------------------------------------------- 
----- 
签字栏 
--------------------------------------------------------------------------- 
----- 
甲方（盖章）： 乙方（盖章）： 
华侨银行（中国）有限公司 史密斯净水设备有限公司 
法定代表人：_____________ 法定代表人：_____________日期：2025 年 1 月 
30 日 日期：2025 年 1 月 30 日 
======================================================== 
======================== 
合同结束 
======================================================== 
======================== 


请提取以下信息并以JSON格式返回（如果某些信息在合同中找不到，请返回null）：
{
    "contractNo": "合同编号",
    "contractName": "合同名称",
    "partyA": "甲方名称",
    "partyAId": "甲方统一社会信用代码",
    "partyB": "乙方名称",
    "partyBId": "乙方统一社会信用代码",
    "contractDescription": "合同描述/服务内容",
    "contractAmount": "合同总金额（数字）",
    "currency": "币种",
    "startDate": "合同开始日期",
    "endDate": "合同结束日期",
    "signDate": "签订日期",
    "effectiveDate": "生效日期",
    "taxRate": "税率（百分比数字）",
    "paymentTerms": "付款条款",
    "paymentMethod": "付款方式"
}

注意：
1. 只返回JSON格式的数据，不要包含任何其他文字说明
2. 日期格式统一为YYYY-MM-DD
3. 金额只返回数字，不包含货币符号
4. 如果信息不明确或找不到，返回null

2025-10-20 13:54:11 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - 调用DeepSeek API: https://api.deepseek.com/chat/completions
2025-10-20 13:54:20 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeek API调用成功
2025-10-20 13:54:20 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI返回内容: {
    "contractNo": "OCBC-WP-2025-001",
    "contractName": "净水器设备租赁合同",
    "partyA": "华侨银行（中国）有限公司",
    "partyAId": null,
    "partyB": "史密斯净水设备有限公司",
    "partyBId": null,
    "contractDescription": "净水器设备租赁事宜，史密斯牌净水器设备（型号：RO-400G，数量：1台）出租给乙方使用，包括主机、滤芯、管路等全套配件",
    "contractAmount": 8000.0,
    "currency": "CNY",
    "startDate": "2025-01-01",
    "endDate": "2025-08-30",
    "signDate": "2025-01-30",
    "effectiveDate": null,
    "taxRate": 6.0,
    "paymentTerms": "乙方应于每月1日前支付当月租金",
    "paymentMethod": null
}
2025-10-20 13:54:20 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI解析结果: {endDate=2025-08-30, contractNo=OCBC-WP-2025-001, contractDescription=净水器设备租赁事宜，史密斯牌净水器设备（型号：RO-400G，数量：1台）出租给乙方使用，包括主机、滤芯、管路等全套配件, signDate=2025-01-30, _aiParsed=true, partyA=华侨银行（中国）有限公司, taxRate=6.0, partyBId=null, partyAId=null, partyB=史密斯净水设备有限公司, contractAmount=8000.0, paymentMethod=null, contractName=净水器设备租赁合同, currency=CNY, startDate=2025-01-01, effectiveDate=null, paymentTerms=乙方应于每月1日前支付当月租金, _parseMessage=DeepSeek AI解析成功}
2025-10-20 13:54:20 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeekAI解析完成，总耗时: 9192ms (9.192秒)
2025-10-20 13:54:20 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用DeepSeek AI解析成功
2025-10-20 13:54:20 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 文档2.pdf, AI解析: true, 状态: SUCCESS
2025-10-20 14:09:32 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 14:09:32 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 14:09:32 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 14:09:32 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 14:09:32 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 14:09:32 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 18ms
2025-10-20 14:09:32 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: deepseek
2025-10-20 14:09:32 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - 开始调用DeepSeek AI解析合同，文本长度: 2052 字符
2025-10-20 14:09:32 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI 请求提示词: 请深刻理解以下合同内容，并以JSON格式返回合同中的关键财务信息。

合同内容：
========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
 
乙方（承租方）：史密斯净水设备有限公司 
地址：上海市徐汇区漕河泾开发区桂平路 481 号 
联系电话：021-66666666 
法定代表人：史密斯 
 
---------------------------------------------------------------------------
----- 
                              合同正文 
---------------------------------------------------------------------------
----- 
 
根据《中华人民共和国合同法》及相关法律法规，甲乙双方在平等、自愿、公平、 
诚实信用的基础上，就净水器设备租赁事宜达成如下协议： 
 
第一条 租赁设备 
甲方同意将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1 台）出租给 
乙方使用。设备包括主机、滤芯、管路等全套配件。 
 
第二条 租赁期限 
租赁期限自 2025-01-01 起至 2025-06-30 止，共计 6 个月。 
 
第三条 租金及支付方式 
1. 租赁总金额为人民币 6,000.00 元（含税）。 
2. 月租金为人民币 1,000.00 元。 
3. 税率为 6.0%。 
4. 乙方应于每月 1 日前支付当月租金。 
 
第四条 甲方权利义务 
1. 甲方保证所出租设备的合法性和完好性。 
2. 甲方负责设备的安装调试和技术培训。 
3. 甲方提供设备保修服务，保修期内免费维修。 
 
第五条 乙方权利义务 
1. 乙方有权在租赁期内正常使用租赁设备。 
2. 乙方应按时支付租金，不得拖欠。 
3. 乙方应妥善保管设备，不得擅自拆卸或转租。 
 
第六条 违约责任 
任何一方违反本合同约定，应承担相应的违约责任，并赔偿对方因此遭受的损失。 
 
第七条 争议解决 
因本合同引起的争议，双方应友好协商解决；协商不成的，提交上海仲裁委员会 
仲裁。 
 
第八条 其他 
本合同一式两份，甲乙双方各执一份，具有同等法律效力。 
 
---------------------------------------------------------------------------
----- 
                              签字栏 
---------------------------------------------------------------------------
----- 
 
甲方（盖章）：                          乙方（盖章）： 
 
 
华侨银行（中国）有限公司                史密斯净水设备有限公司 
 
 
法定代表人：_____________               法定代表人：_____________ 
 
 
日期：2025 年 1 月 24 日                    日期：2025 年 1 月 24 日 
 
========================================================
======================== 
                              合同结束 
========================================================
======================== 


请提取以下信息并以JSON格式返回（如果某些信息在合同中找不到，请返回null）：
{
    "contractNo": "合同编号",
    "contractName": "合同名称",
    "partyA": "甲方名称",
    "partyAId": "甲方统一社会信用代码",
    "partyB": "乙方名称",
    "partyBId": "乙方统一社会信用代码",
    "contractDescription": "合同描述/服务内容",
    "contractAmount": "合同总金额（数字）",
    "currency": "币种",
    "startDate": "合同开始日期",
    "endDate": "合同结束日期",
    "signDate": "签订日期",
    "effectiveDate": "生效日期",
    "taxRate": "税率（百分比数字）",
    "paymentTerms": "付款条款",
    "paymentMethod": "付款方式"
}

注意：
1. 只返回JSON格式的数据，不要包含任何其他文字说明
2. 日期格式统一为YYYY-MM-DD
3. 金额只返回数字，不包含货币符号
4. 如果信息不明确或找不到，返回null

2025-10-20 14:09:32 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - 调用DeepSeek API: https://api.deepseek.com/chat/completions
2025-10-20 14:09:43 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeek API调用成功
2025-10-20 14:09:43 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI返回内容: {
    "contractNo": "OCBC-WP-2025-001",
    "contractName": "净水器设备租赁合同",
    "partyA": "华侨银行（中国）有限公司",
    "partyAId": null,
    "partyB": "史密斯净水设备有限公司",
    "partyBId": null,
    "contractDescription": "甲方将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1台）出租给乙方使用，包括主机、滤芯、管路等全套配件",
    "contractAmount": 6000,
    "currency": "人民币",
    "startDate": "2025-01-01",
    "endDate": "2025-06-30",
    "signDate": "2025-01-24",
    "effectiveDate": null,
    "taxRate": 6,
    "paymentTerms": "月租金为人民币1,000.00元，乙方应于每月1日前支付当月租金",
    "paymentMethod": null
}
2025-10-20 14:09:43 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI解析结果: {endDate=2025-06-30, contractNo=OCBC-WP-2025-001, contractDescription=甲方将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1台）出租给乙方使用，包括主机、滤芯、管路等全套配件, signDate=2025-01-24, _aiParsed=true, partyA=华侨银行（中国）有限公司, taxRate=6.0, partyBId=null, partyAId=null, partyB=史密斯净水设备有限公司, contractAmount=6000.0, paymentMethod=null, contractName=净水器设备租赁合同, currency=人民币, startDate=2025-01-01, effectiveDate=null, paymentTerms=月租金为人民币1,000.00元，乙方应于每月1日前支付当月租金, _parseMessage=DeepSeek AI解析成功}
2025-10-20 14:09:43 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeekAI解析完成，总耗时: 10888ms (10.888秒)
2025-10-20 14:09:43 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用DeepSeek AI解析成功
2025-10-20 14:09:43 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: true, 状态: SUCCESS
2025-10-20 14:11:16 [http-nio-8082-exec-5] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 14:11:16 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 14:11:16 [http-nio-8082-exec-5] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 14:11:16 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 14:11:16 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 14:11:16 [http-nio-8082-exec-5] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 16ms
2025-10-20 14:11:16 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: deepseek
2025-10-20 14:11:16 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - 开始调用DeepSeek AI解析合同，文本长度: 2052 字符
2025-10-20 14:11:16 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI 请求提示词: 请深刻理解以下合同内容，并以JSON格式返回合同中的关键财务信息。

合同内容：
========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
 
乙方（承租方）：史密斯净水设备有限公司 
地址：上海市徐汇区漕河泾开发区桂平路 481 号 
联系电话：021-66666666 
法定代表人：史密斯 
 
---------------------------------------------------------------------------
----- 
                              合同正文 
---------------------------------------------------------------------------
----- 
 
根据《中华人民共和国合同法》及相关法律法规，甲乙双方在平等、自愿、公平、 
诚实信用的基础上，就净水器设备租赁事宜达成如下协议： 
 
第一条 租赁设备 
甲方同意将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1 台）出租给 
乙方使用。设备包括主机、滤芯、管路等全套配件。 
 
第二条 租赁期限 
租赁期限自 2025-01-01 起至 2025-06-30 止，共计 6 个月。 
 
第三条 租金及支付方式 
1. 租赁总金额为人民币 6,000.00 元（含税）。 
2. 月租金为人民币 1,000.00 元。 
3. 税率为 6.0%。 
4. 乙方应于每月 1 日前支付当月租金。 
 
第四条 甲方权利义务 
1. 甲方保证所出租设备的合法性和完好性。 
2. 甲方负责设备的安装调试和技术培训。 
3. 甲方提供设备保修服务，保修期内免费维修。 
 
第五条 乙方权利义务 
1. 乙方有权在租赁期内正常使用租赁设备。 
2. 乙方应按时支付租金，不得拖欠。 
3. 乙方应妥善保管设备，不得擅自拆卸或转租。 
 
第六条 违约责任 
任何一方违反本合同约定，应承担相应的违约责任，并赔偿对方因此遭受的损失。 
 
第七条 争议解决 
因本合同引起的争议，双方应友好协商解决；协商不成的，提交上海仲裁委员会 
仲裁。 
 
第八条 其他 
本合同一式两份，甲乙双方各执一份，具有同等法律效力。 
 
---------------------------------------------------------------------------
----- 
                              签字栏 
---------------------------------------------------------------------------
----- 
 
甲方（盖章）：                          乙方（盖章）： 
 
 
华侨银行（中国）有限公司                史密斯净水设备有限公司 
 
 
法定代表人：_____________               法定代表人：_____________ 
 
 
日期：2025 年 1 月 24 日                    日期：2025 年 1 月 24 日 
 
========================================================
======================== 
                              合同结束 
========================================================
======================== 


请提取以下信息并以JSON格式返回（如果某些信息在合同中找不到，请返回null）：
{
    "contractNo": "合同编号",
    "contractName": "合同名称",
    "partyA": "甲方名称",
    "partyAId": "甲方统一社会信用代码",
    "partyB": "乙方名称",
    "partyBId": "乙方统一社会信用代码",
    "contractDescription": "合同描述/服务内容",
    "contractAmount": "合同总金额（数字）",
    "currency": "币种",
    "startDate": "合同开始日期",
    "endDate": "合同结束日期",
    "signDate": "签订日期",
    "effectiveDate": "生效日期",
    "taxRate": "税率（百分比数字）",
    "paymentTerms": "付款条款",
    "paymentMethod": "付款方式"
}

注意：
1. 只返回JSON格式的数据，不要包含任何其他文字说明
2. 日期格式统一为YYYY-MM-DD
3. 金额只返回数字，不包含货币符号
4. 如果信息不明确或找不到，返回null

2025-10-20 14:11:16 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - 调用DeepSeek API: https://api.deepseek.com/chat/completions
2025-10-20 14:11:26 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeek API调用成功
2025-10-20 14:11:26 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI返回内容: {
    "contractNo": "OCBC-WP-2025-001",
    "contractName": "净水器设备租赁合同",
    "partyA": "华侨银行（中国）有限公司",
    "partyAId": null,
    "partyB": "史密斯净水设备有限公司",
    "partyBId": null,
    "contractDescription": "史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁",
    "contractAmount": 6000.0,
    "currency": "CNY",
    "startDate": "2025-01-01",
    "endDate": "2025-06-30",
    "signDate": "2025-01-24",
    "effectiveDate": null,
    "taxRate": 6.0,
    "paymentTerms": "月租金为人民币1,000.00元，乙方应于每月1日前支付当月租金",
    "paymentMethod": null
}
2025-10-20 14:11:26 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI解析结果: {endDate=2025-06-30, contractNo=OCBC-WP-2025-001, contractDescription=史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁, signDate=2025-01-24, _aiParsed=true, partyA=华侨银行（中国）有限公司, taxRate=6.0, partyBId=null, partyAId=null, partyB=史密斯净水设备有限公司, contractAmount=6000.0, paymentMethod=null, contractName=净水器设备租赁合同, currency=CNY, startDate=2025-01-01, effectiveDate=null, paymentTerms=月租金为人民币1,000.00元，乙方应于每月1日前支付当月租金, _parseMessage=DeepSeek AI解析成功}
2025-10-20 14:11:26 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeekAI解析完成，总耗时: 10405ms (10.405秒)
2025-10-20 14:11:26 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用DeepSeek AI解析成功
2025-10-20 14:11:26 [http-nio-8082-exec-5] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: true, 状态: SUCCESS
2025-10-20 14:24:41 [http-nio-8082-exec-7] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 14:24:41 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 14:24:41 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 14:24:41 [http-nio-8082-exec-7] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 14:24:41 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 14:24:41 [http-nio-8082-exec-7] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 18ms
2025-10-20 14:24:41 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: deepseek
2025-10-20 14:24:41 [http-nio-8082-exec-7] INFO  c.o.f.service.DeepSeekAiService - 开始调用DeepSeek AI解析合同，文本长度: 2052 字符
2025-10-20 14:24:41 [http-nio-8082-exec-7] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI 请求提示词: 请深刻理解以下合同内容，并以JSON格式返回合同中的关键财务信息。

合同内容：
========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
 
乙方（承租方）：史密斯净水设备有限公司 
地址：上海市徐汇区漕河泾开发区桂平路 481 号 
联系电话：021-66666666 
法定代表人：史密斯 
 
---------------------------------------------------------------------------
----- 
                              合同正文 
---------------------------------------------------------------------------
----- 
 
根据《中华人民共和国合同法》及相关法律法规，甲乙双方在平等、自愿、公平、 
诚实信用的基础上，就净水器设备租赁事宜达成如下协议： 
 
第一条 租赁设备 
甲方同意将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1 台）出租给 
乙方使用。设备包括主机、滤芯、管路等全套配件。 
 
第二条 租赁期限 
租赁期限自 2025-01-01 起至 2025-06-30 止，共计 6 个月。 
 
第三条 租金及支付方式 
1. 租赁总金额为人民币 6,000.00 元（含税）。 
2. 月租金为人民币 1,000.00 元。 
3. 税率为 6.0%。 
4. 乙方应于每月 1 日前支付当月租金。 
 
第四条 甲方权利义务 
1. 甲方保证所出租设备的合法性和完好性。 
2. 甲方负责设备的安装调试和技术培训。 
3. 甲方提供设备保修服务，保修期内免费维修。 
 
第五条 乙方权利义务 
1. 乙方有权在租赁期内正常使用租赁设备。 
2. 乙方应按时支付租金，不得拖欠。 
3. 乙方应妥善保管设备，不得擅自拆卸或转租。 
 
第六条 违约责任 
任何一方违反本合同约定，应承担相应的违约责任，并赔偿对方因此遭受的损失。 
 
第七条 争议解决 
因本合同引起的争议，双方应友好协商解决；协商不成的，提交上海仲裁委员会 
仲裁。 
 
第八条 其他 
本合同一式两份，甲乙双方各执一份，具有同等法律效力。 
 
---------------------------------------------------------------------------
----- 
                              签字栏 
---------------------------------------------------------------------------
----- 
 
甲方（盖章）：                          乙方（盖章）： 
 
 
华侨银行（中国）有限公司                史密斯净水设备有限公司 
 
 
法定代表人：_____________               法定代表人：_____________ 
 
 
日期：2025 年 1 月 24 日                    日期：2025 年 1 月 24 日 
 
========================================================
======================== 
                              合同结束 
========================================================
======================== 


请提取以下信息并以JSON格式返回（如果某些信息在合同中找不到，请返回null）：
{
    "contractNo": "合同编号",
    "contractName": "合同名称",
    "partyA": "甲方名称",
    "partyAId": "甲方统一社会信用代码",
    "partyB": "乙方名称",
    "partyBId": "乙方统一社会信用代码",
    "contractDescription": "合同描述/服务内容",
    "contractAmount": "合同总金额（数字）",
    "currency": "币种",
    "startDate": "合同开始日期",
    "endDate": "合同结束日期",
    "signDate": "签订日期",
    "effectiveDate": "生效日期",
    "taxRate": "税率（百分比数字）",
    "paymentTerms": "付款条款",
    "paymentMethod": "付款方式"
}

注意：
1. 只返回JSON格式的数据，不要包含任何其他文字说明
2. 日期格式统一为YYYY-MM-DD
3. 金额只返回数字，不包含货币符号
4. 如果信息不明确或找不到，返回null

2025-10-20 14:24:41 [http-nio-8082-exec-7] INFO  c.o.f.service.DeepSeekAiService - 调用DeepSeek API: https://api.deepseek.com/chat/completions
2025-10-20 14:24:52 [http-nio-8082-exec-7] INFO  c.o.f.service.DeepSeekAiService - DeepSeek API调用成功
2025-10-20 14:24:52 [http-nio-8082-exec-7] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI返回内容: {
    "contractNo": "OCBC-WP-2025-001",
    "contractName": "净水器设备租赁合同",
    "partyA": "华侨银行（中国）有限公司",
    "partyAId": null,
    "partyB": "史密斯净水设备有限公司",
    "partyBId": null,
    "contractDescription": "甲方将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1台）出租给乙方使用，包括主机、滤芯、管路等全套配件",
    "contractAmount": 6000,
    "currency": "人民币",
    "startDate": "2025-01-01",
    "endDate": "2025-06-30",
    "signDate": "2025-01-24",
    "effectiveDate": null,
    "taxRate": 6,
    "paymentTerms": "乙方应于每月1日前支付当月租金",
    "paymentMethod": null
}
2025-10-20 14:24:52 [http-nio-8082-exec-7] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI解析结果: {endDate=2025-06-30, contractNo=OCBC-WP-2025-001, contractDescription=甲方将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1台）出租给乙方使用，包括主机、滤芯、管路等全套配件, signDate=2025-01-24, _aiParsed=true, partyA=华侨银行（中国）有限公司, taxRate=6.0, partyBId=null, partyAId=null, partyB=史密斯净水设备有限公司, contractAmount=6000.0, paymentMethod=null, contractName=净水器设备租赁合同, currency=人民币, startDate=2025-01-01, effectiveDate=null, paymentTerms=乙方应于每月1日前支付当月租金, _parseMessage=DeepSeek AI解析成功}
2025-10-20 14:24:52 [http-nio-8082-exec-7] INFO  c.o.f.service.DeepSeekAiService - DeepSeekAI解析完成，总耗时: 10236ms (10.236秒)
2025-10-20 14:24:52 [http-nio-8082-exec-7] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用DeepSeek AI解析成功
2025-10-20 14:24:52 [http-nio-8082-exec-7] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: true, 状态: SUCCESS
2025-10-20 14:33:09 [http-nio-8082-exec-9] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 14:33:09 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 14:33:09 [http-nio-8082-exec-9] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 14:33:09 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 14:33:09 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 14:33:09 [http-nio-8082-exec-9] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 20ms
2025-10-20 14:33:09 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: deepseek
2025-10-20 14:33:09 [http-nio-8082-exec-9] INFO  c.o.f.service.DeepSeekAiService - 开始调用DeepSeek AI解析合同，文本长度: 2052 字符
2025-10-20 14:33:09 [http-nio-8082-exec-9] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI 请求提示词: 请深刻理解以下合同内容，并以JSON格式返回合同中的关键财务信息。

合同内容：
========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
 
乙方（承租方）：史密斯净水设备有限公司 
地址：上海市徐汇区漕河泾开发区桂平路 481 号 
联系电话：021-66666666 
法定代表人：史密斯 
 
---------------------------------------------------------------------------
----- 
                              合同正文 
---------------------------------------------------------------------------
----- 
 
根据《中华人民共和国合同法》及相关法律法规，甲乙双方在平等、自愿、公平、 
诚实信用的基础上，就净水器设备租赁事宜达成如下协议： 
 
第一条 租赁设备 
甲方同意将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1 台）出租给 
乙方使用。设备包括主机、滤芯、管路等全套配件。 
 
第二条 租赁期限 
租赁期限自 2025-01-01 起至 2025-06-30 止，共计 6 个月。 
 
第三条 租金及支付方式 
1. 租赁总金额为人民币 6,000.00 元（含税）。 
2. 月租金为人民币 1,000.00 元。 
3. 税率为 6.0%。 
4. 乙方应于每月 1 日前支付当月租金。 
 
第四条 甲方权利义务 
1. 甲方保证所出租设备的合法性和完好性。 
2. 甲方负责设备的安装调试和技术培训。 
3. 甲方提供设备保修服务，保修期内免费维修。 
 
第五条 乙方权利义务 
1. 乙方有权在租赁期内正常使用租赁设备。 
2. 乙方应按时支付租金，不得拖欠。 
3. 乙方应妥善保管设备，不得擅自拆卸或转租。 
 
第六条 违约责任 
任何一方违反本合同约定，应承担相应的违约责任，并赔偿对方因此遭受的损失。 
 
第七条 争议解决 
因本合同引起的争议，双方应友好协商解决；协商不成的，提交上海仲裁委员会 
仲裁。 
 
第八条 其他 
本合同一式两份，甲乙双方各执一份，具有同等法律效力。 
 
---------------------------------------------------------------------------
----- 
                              签字栏 
---------------------------------------------------------------------------
----- 
 
甲方（盖章）：                          乙方（盖章）： 
 
 
华侨银行（中国）有限公司                史密斯净水设备有限公司 
 
 
法定代表人：_____________               法定代表人：_____________ 
 
 
日期：2025 年 1 月 24 日                    日期：2025 年 1 月 24 日 
 
========================================================
======================== 
                              合同结束 
========================================================
======================== 


请提取以下信息并以JSON格式返回（如果某些信息在合同中找不到，请返回null）：
{
    "contractNo": "合同编号",
    "contractName": "合同名称",
    "partyA": "甲方名称",
    "partyAId": "甲方统一社会信用代码",
    "partyB": "乙方名称",
    "partyBId": "乙方统一社会信用代码",
    "contractDescription": "合同描述/服务内容",
    "contractAmount": "合同总金额（数字）",
    "currency": "币种",
    "startDate": "合同开始日期",
    "endDate": "合同结束日期",
    "signDate": "签订日期",
    "effectiveDate": "生效日期",
    "taxRate": "税率（百分比数字）",
    "paymentTerms": "付款条款",
    "paymentMethod": "付款方式"
}

注意：
1. 只返回JSON格式的数据，不要包含任何其他文字说明
2. 日期格式统一为YYYY-MM-DD
3. 金额只返回数字，不包含货币符号
4. 如果信息不明确或找不到，返回null

2025-10-20 14:33:09 [http-nio-8082-exec-9] INFO  c.o.f.service.DeepSeekAiService - 调用DeepSeek API: https://api.deepseek.com/chat/completions
2025-10-20 14:33:18 [http-nio-8082-exec-9] INFO  c.o.f.service.DeepSeekAiService - DeepSeek API调用成功
2025-10-20 14:33:18 [http-nio-8082-exec-9] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI返回内容: {
    "contractNo": "OCBC-WP-2025-001",
    "contractName": "净水器设备租赁合同",
    "partyA": "华侨银行（中国）有限公司",
    "partyAId": null,
    "partyB": "史密斯净水设备有限公司",
    "partyBId": null,
    "contractDescription": "史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁",
    "contractAmount": 6000,
    "currency": "人民币",
    "startDate": "2025-01-01",
    "endDate": "2025-06-30",
    "signDate": "2025-01-24",
    "effectiveDate": null,
    "taxRate": 6,
    "paymentTerms": "乙方应于每月1日前支付当月租金",
    "paymentMethod": null
}
2025-10-20 14:33:18 [http-nio-8082-exec-9] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI解析结果: {endDate=2025-06-30, contractNo=OCBC-WP-2025-001, contractDescription=史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁, signDate=2025-01-24, _aiParsed=true, partyA=华侨银行（中国）有限公司, taxRate=6.0, partyBId=null, partyAId=null, partyB=史密斯净水设备有限公司, contractAmount=6000.0, paymentMethod=null, contractName=净水器设备租赁合同, currency=人民币, startDate=2025-01-01, effectiveDate=null, paymentTerms=乙方应于每月1日前支付当月租金, _parseMessage=DeepSeek AI解析成功}
2025-10-20 14:33:18 [http-nio-8082-exec-9] INFO  c.o.f.service.DeepSeekAiService - DeepSeekAI解析完成，总耗时: 9506ms (9.506秒)
2025-10-20 14:33:18 [http-nio-8082-exec-9] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用DeepSeek AI解析成功
2025-10-20 14:33:18 [http-nio-8082-exec-9] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: true, 状态: SUCCESS
2025-10-20 14:49:42 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 14:49:42 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 14:49:42 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 14:49:42 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 14:49:42 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 14:49:42 [http-nio-8082-exec-1] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 17ms
2025-10-20 14:49:42 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: deepseek
2025-10-20 14:49:42 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - 开始调用DeepSeek AI解析合同，文本长度: 2052 字符
2025-10-20 14:49:42 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI 请求提示词: 请深刻理解以下合同内容，并以JSON格式返回合同中的关键财务信息。

合同内容：
========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
 
乙方（承租方）：史密斯净水设备有限公司 
地址：上海市徐汇区漕河泾开发区桂平路 481 号 
联系电话：021-66666666 
法定代表人：史密斯 
 
---------------------------------------------------------------------------
----- 
                              合同正文 
---------------------------------------------------------------------------
----- 
 
根据《中华人民共和国合同法》及相关法律法规，甲乙双方在平等、自愿、公平、 
诚实信用的基础上，就净水器设备租赁事宜达成如下协议： 
 
第一条 租赁设备 
甲方同意将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1 台）出租给 
乙方使用。设备包括主机、滤芯、管路等全套配件。 
 
第二条 租赁期限 
租赁期限自 2025-01-01 起至 2025-06-30 止，共计 6 个月。 
 
第三条 租金及支付方式 
1. 租赁总金额为人民币 6,000.00 元（含税）。 
2. 月租金为人民币 1,000.00 元。 
3. 税率为 6.0%。 
4. 乙方应于每月 1 日前支付当月租金。 
 
第四条 甲方权利义务 
1. 甲方保证所出租设备的合法性和完好性。 
2. 甲方负责设备的安装调试和技术培训。 
3. 甲方提供设备保修服务，保修期内免费维修。 
 
第五条 乙方权利义务 
1. 乙方有权在租赁期内正常使用租赁设备。 
2. 乙方应按时支付租金，不得拖欠。 
3. 乙方应妥善保管设备，不得擅自拆卸或转租。 
 
第六条 违约责任 
任何一方违反本合同约定，应承担相应的违约责任，并赔偿对方因此遭受的损失。 
 
第七条 争议解决 
因本合同引起的争议，双方应友好协商解决；协商不成的，提交上海仲裁委员会 
仲裁。 
 
第八条 其他 
本合同一式两份，甲乙双方各执一份，具有同等法律效力。 
 
---------------------------------------------------------------------------
----- 
                              签字栏 
---------------------------------------------------------------------------
----- 
 
甲方（盖章）：                          乙方（盖章）： 
 
 
华侨银行（中国）有限公司                史密斯净水设备有限公司 
 
 
法定代表人：_____________               法定代表人：_____________ 
 
 
日期：2025 年 1 月 24 日                    日期：2025 年 1 月 24 日 
 
========================================================
======================== 
                              合同结束 
========================================================
======================== 


请提取以下信息并以JSON格式返回（如果某些信息在合同中找不到，请返回null）：
{
    "contractNo": "合同编号",
    "contractName": "合同名称",
    "partyA": "甲方名称",
    "partyAId": "甲方统一社会信用代码",
    "partyB": "乙方名称",
    "partyBId": "乙方统一社会信用代码",
    "contractDescription": "合同描述/服务内容",
    "contractAmount": "合同总金额（数字）",
    "currency": "币种",
    "startDate": "合同开始日期",
    "endDate": "合同结束日期",
    "signDate": "签订日期",
    "effectiveDate": "生效日期",
    "taxRate": "税率（百分比数字）",
    "paymentTerms": "付款条款",
    "paymentMethod": "付款方式"
}

注意：
1. 只返回JSON格式的数据，不要包含任何其他文字说明
2. 日期格式统一为YYYY-MM-DD
3. 金额只返回数字，不包含货币符号
4. 如果信息不明确或找不到，返回null

2025-10-20 14:49:42 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - 调用DeepSeek API: https://api.deepseek.com/chat/completions
2025-10-20 14:49:52 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeek API调用成功
2025-10-20 14:49:52 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI返回内容: {
    "contractNo": "OCBC-WP-2025-001",
    "contractName": "净水器设备租赁合同",
    "partyA": "华侨银行（中国）有限公司",
    "partyAId": null,
    "partyB": "史密斯净水设备有限公司",
    "partyBId": null,
    "contractDescription": "史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁",
    "contractAmount": 6000.0,
    "currency": "人民币",
    "startDate": "2025-01-01",
    "endDate": "2025-06-30",
    "signDate": "2025-01-24",
    "effectiveDate": null,
    "taxRate": 6.0,
    "paymentTerms": "乙方应于每月1日前支付当月租金",
    "paymentMethod": null
}
2025-10-20 14:49:52 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI解析结果: {endDate=2025-06-30, contractNo=OCBC-WP-2025-001, contractDescription=史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁, signDate=2025-01-24, _aiParsed=true, partyA=华侨银行（中国）有限公司, taxRate=6.0, partyBId=null, partyAId=null, partyB=史密斯净水设备有限公司, contractAmount=6000.0, paymentMethod=null, contractName=净水器设备租赁合同, currency=人民币, startDate=2025-01-01, effectiveDate=null, paymentTerms=乙方应于每月1日前支付当月租金, _parseMessage=DeepSeek AI解析成功}
2025-10-20 14:49:52 [http-nio-8082-exec-1] INFO  c.o.f.service.DeepSeekAiService - DeepSeekAI解析完成，总耗时: 9620ms (9.62秒)
2025-10-20 14:49:52 [http-nio-8082-exec-1] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用DeepSeek AI解析成功
2025-10-20 14:49:52 [http-nio-8082-exec-1] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: true, 状态: SUCCESS
2025-10-20 15:26:08 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 15:26:08 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 15:26:08 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 15:26:08 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 15:26:08 [PDF-Processing-1] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 15:26:08 [http-nio-8082-exec-3] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 19ms
2025-10-20 15:26:08 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: deepseek
2025-10-20 15:26:08 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - 开始调用DeepSeek AI解析合同，文本长度: 2052 字符
2025-10-20 15:26:08 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI 请求提示词: 请深刻理解以下合同内容，并以JSON格式返回合同中的关键财务信息。

合同内容：
========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
 
乙方（承租方）：史密斯净水设备有限公司 
地址：上海市徐汇区漕河泾开发区桂平路 481 号 
联系电话：021-66666666 
法定代表人：史密斯 
 
---------------------------------------------------------------------------
----- 
                              合同正文 
---------------------------------------------------------------------------
----- 
 
根据《中华人民共和国合同法》及相关法律法规，甲乙双方在平等、自愿、公平、 
诚实信用的基础上，就净水器设备租赁事宜达成如下协议： 
 
第一条 租赁设备 
甲方同意将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1 台）出租给 
乙方使用。设备包括主机、滤芯、管路等全套配件。 
 
第二条 租赁期限 
租赁期限自 2025-01-01 起至 2025-06-30 止，共计 6 个月。 
 
第三条 租金及支付方式 
1. 租赁总金额为人民币 6,000.00 元（含税）。 
2. 月租金为人民币 1,000.00 元。 
3. 税率为 6.0%。 
4. 乙方应于每月 1 日前支付当月租金。 
 
第四条 甲方权利义务 
1. 甲方保证所出租设备的合法性和完好性。 
2. 甲方负责设备的安装调试和技术培训。 
3. 甲方提供设备保修服务，保修期内免费维修。 
 
第五条 乙方权利义务 
1. 乙方有权在租赁期内正常使用租赁设备。 
2. 乙方应按时支付租金，不得拖欠。 
3. 乙方应妥善保管设备，不得擅自拆卸或转租。 
 
第六条 违约责任 
任何一方违反本合同约定，应承担相应的违约责任，并赔偿对方因此遭受的损失。 
 
第七条 争议解决 
因本合同引起的争议，双方应友好协商解决；协商不成的，提交上海仲裁委员会 
仲裁。 
 
第八条 其他 
本合同一式两份，甲乙双方各执一份，具有同等法律效力。 
 
---------------------------------------------------------------------------
----- 
                              签字栏 
---------------------------------------------------------------------------
----- 
 
甲方（盖章）：                          乙方（盖章）： 
 
 
华侨银行（中国）有限公司                史密斯净水设备有限公司 
 
 
法定代表人：_____________               法定代表人：_____________ 
 
 
日期：2025 年 1 月 24 日                    日期：2025 年 1 月 24 日 
 
========================================================
======================== 
                              合同结束 
========================================================
======================== 


请提取以下信息并以JSON格式返回（如果某些信息在合同中找不到，请返回null）：
{
    "contractNo": "合同编号",
    "contractName": "合同名称",
    "partyA": "甲方名称",
    "partyAId": "甲方统一社会信用代码",
    "partyB": "乙方名称",
    "partyBId": "乙方统一社会信用代码",
    "contractDescription": "合同描述/服务内容",
    "contractAmount": "合同总金额（数字）",
    "currency": "币种",
    "startDate": "合同开始日期",
    "endDate": "合同结束日期",
    "signDate": "签订日期",
    "effectiveDate": "生效日期",
    "taxRate": "税率（百分比数字）",
    "paymentTerms": "付款条款",
    "paymentMethod": "付款方式"
}

注意：
1. 只返回JSON格式的数据，不要包含任何其他文字说明
2. 日期格式统一为YYYY-MM-DD
3. 金额只返回数字，不包含货币符号
4. 如果信息不明确或找不到，返回null

2025-10-20 15:26:08 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - 调用DeepSeek API: https://api.deepseek.com/chat/completions
2025-10-20 15:26:18 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeek API调用成功
2025-10-20 15:26:18 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI返回内容: {
    "contractNo": "OCBC-WP-2025-001",
    "contractName": "净水器设备租赁合同",
    "partyA": "华侨银行（中国）有限公司",
    "partyAId": null,
    "partyB": "史密斯净水设备有限公司",
    "partyBId": null,
    "contractDescription": "史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁",
    "contractAmount": 6000,
    "currency": "CNY",
    "startDate": "2025-01-01",
    "endDate": "2025-06-30",
    "signDate": "2025-01-24",
    "effectiveDate": null,
    "taxRate": 6,
    "paymentTerms": "乙方应于每月1日前支付当月租金",
    "paymentMethod": null
}
2025-10-20 15:26:18 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI解析结果: {endDate=2025-06-30, contractNo=OCBC-WP-2025-001, contractDescription=史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁, signDate=2025-01-24, _aiParsed=true, partyA=华侨银行（中国）有限公司, taxRate=6.0, partyBId=null, partyAId=null, partyB=史密斯净水设备有限公司, contractAmount=6000.0, paymentMethod=null, contractName=净水器设备租赁合同, currency=CNY, startDate=2025-01-01, effectiveDate=null, paymentTerms=乙方应于每月1日前支付当月租金, _parseMessage=DeepSeek AI解析成功}
2025-10-20 15:26:18 [http-nio-8082-exec-3] INFO  c.o.f.service.DeepSeekAiService - DeepSeekAI解析完成，总耗时: 9336ms (9.336秒)
2025-10-20 15:26:18 [http-nio-8082-exec-3] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用DeepSeek AI解析成功
2025-10-20 15:26:18 [http-nio-8082-exec-3] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: true, 状态: SUCCESS
2025-10-20 15:28:10 [http-nio-8082-exec-5] INFO  c.o.f.c.ContractParseController - 接收到合同解析请求，文件名: 史密斯牌净水器租赁合同.pdf, 文件大小: 89300 bytes
2025-10-20 15:28:10 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 开始解析合同文件: 史密斯牌净水器租赁合同.pdf
2025-10-20 15:28:10 [http-nio-8082-exec-5] INFO  c.o.finance.service.ContractService - 开始提取PDF文本内容，文件大小: 89300 bytes
2025-10-20 15:28:10 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 使用快速PDF文本提取方案，文件大小: 89300 bytes
2025-10-20 15:28:10 [PDF-Processing-2] INFO  c.o.finance.service.ContractService - 优化PDFBox提取成功，文本长度: 2052
2025-10-20 15:28:10 [http-nio-8082-exec-5] INFO  c.o.finance.service.ContractService - PDF文本提取完成，总耗时: 11ms
2025-10-20 15:28:10 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - AI服务提供商配置: deepseek
2025-10-20 15:28:10 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - 开始调用DeepSeek AI解析合同，文本长度: 2052 字符
2025-10-20 15:28:10 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI 请求提示词: 请深刻理解以下合同内容，并以JSON格式返回合同中的关键财务信息。

合同内容：
========================================================
======================== 
                            净水器设备租赁合同 
========================================================
======================== 
 
合同编号：OCBC-WP-2025-001 
签订日期：2025 年 1 月 24 日 
 
---------------------------------------------------------------------------
----- 
                              合同双方信息 
---------------------------------------------------------------------------
----- 
 
甲方（出租方）：华侨银行（中国）有限公司 
地址：上海市浦东新区世纪大道 88 号金茂大厦 
联系电话：021-38888888 
法定代表人：张明 
 
乙方（承租方）：史密斯净水设备有限公司 
地址：上海市徐汇区漕河泾开发区桂平路 481 号 
联系电话：021-66666666 
法定代表人：史密斯 
 
---------------------------------------------------------------------------
----- 
                              合同正文 
---------------------------------------------------------------------------
----- 
 
根据《中华人民共和国合同法》及相关法律法规，甲乙双方在平等、自愿、公平、 
诚实信用的基础上，就净水器设备租赁事宜达成如下协议： 
 
第一条 租赁设备 
甲方同意将其拥有的史密斯牌净水器设备（型号：RO-400G，数量：1 台）出租给 
乙方使用。设备包括主机、滤芯、管路等全套配件。 
 
第二条 租赁期限 
租赁期限自 2025-01-01 起至 2025-06-30 止，共计 6 个月。 
 
第三条 租金及支付方式 
1. 租赁总金额为人民币 6,000.00 元（含税）。 
2. 月租金为人民币 1,000.00 元。 
3. 税率为 6.0%。 
4. 乙方应于每月 1 日前支付当月租金。 
 
第四条 甲方权利义务 
1. 甲方保证所出租设备的合法性和完好性。 
2. 甲方负责设备的安装调试和技术培训。 
3. 甲方提供设备保修服务，保修期内免费维修。 
 
第五条 乙方权利义务 
1. 乙方有权在租赁期内正常使用租赁设备。 
2. 乙方应按时支付租金，不得拖欠。 
3. 乙方应妥善保管设备，不得擅自拆卸或转租。 
 
第六条 违约责任 
任何一方违反本合同约定，应承担相应的违约责任，并赔偿对方因此遭受的损失。 
 
第七条 争议解决 
因本合同引起的争议，双方应友好协商解决；协商不成的，提交上海仲裁委员会 
仲裁。 
 
第八条 其他 
本合同一式两份，甲乙双方各执一份，具有同等法律效力。 
 
---------------------------------------------------------------------------
----- 
                              签字栏 
---------------------------------------------------------------------------
----- 
 
甲方（盖章）：                          乙方（盖章）： 
 
 
华侨银行（中国）有限公司                史密斯净水设备有限公司 
 
 
法定代表人：_____________               法定代表人：_____________ 
 
 
日期：2025 年 1 月 24 日                    日期：2025 年 1 月 24 日 
 
========================================================
======================== 
                              合同结束 
========================================================
======================== 


请提取以下信息并以JSON格式返回（如果某些信息在合同中找不到，请返回null）：
{
    "contractNo": "合同编号",
    "contractName": "合同名称",
    "partyA": "甲方名称",
    "partyAId": "甲方统一社会信用代码",
    "partyB": "乙方名称",
    "partyBId": "乙方统一社会信用代码",
    "contractDescription": "合同描述/服务内容",
    "contractAmount": "合同总金额（数字）",
    "currency": "币种",
    "startDate": "合同开始日期",
    "endDate": "合同结束日期",
    "signDate": "签订日期",
    "effectiveDate": "生效日期",
    "taxRate": "税率（百分比数字）",
    "paymentTerms": "付款条款",
    "paymentMethod": "付款方式"
}

注意：
1. 只返回JSON格式的数据，不要包含任何其他文字说明
2. 日期格式统一为YYYY-MM-DD
3. 金额只返回数字，不包含货币符号
4. 如果信息不明确或找不到，返回null

2025-10-20 15:28:10 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - 调用DeepSeek API: https://api.deepseek.com/chat/completions
2025-10-20 15:28:19 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeek API调用成功
2025-10-20 15:28:19 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI返回内容: {
    "contractNo": "OCBC-WP-2025-001",
    "contractName": "净水器设备租赁合同",
    "partyA": "华侨银行（中国）有限公司",
    "partyAId": null,
    "partyB": "史密斯净水设备有限公司",
    "partyBId": null,
    "contractDescription": "史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁",
    "contractAmount": 6000,
    "currency": "人民币",
    "startDate": "2025-01-01",
    "endDate": "2025-06-30",
    "signDate": "2025-01-24",
    "effectiveDate": null,
    "taxRate": 6,
    "paymentTerms": "乙方应于每月1日前支付当月租金",
    "paymentMethod": null
}
2025-10-20 15:28:19 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeek AI解析结果: {endDate=2025-06-30, contractNo=OCBC-WP-2025-001, contractDescription=史密斯牌净水器设备（型号：RO-400G，数量：1台）租赁, signDate=2025-01-24, _aiParsed=true, partyA=华侨银行（中国）有限公司, taxRate=6.0, partyBId=null, partyAId=null, partyB=史密斯净水设备有限公司, contractAmount=6000.0, paymentMethod=null, contractName=净水器设备租赁合同, currency=人民币, startDate=2025-01-01, effectiveDate=null, paymentTerms=乙方应于每月1日前支付当月租金, _parseMessage=DeepSeek AI解析成功}
2025-10-20 15:28:19 [http-nio-8082-exec-5] INFO  c.o.f.service.DeepSeekAiService - DeepSeekAI解析完成，总耗时: 9235ms (9.235秒)
2025-10-20 15:28:19 [http-nio-8082-exec-5] INFO  c.o.f.service.ContractParseService - 合同解析完成: 使用DeepSeek AI解析成功
2025-10-20 15:28:19 [http-nio-8082-exec-5] INFO  c.o.f.c.ContractParseController - 合同解析完成，文件: 史密斯牌净水器租赁合同.pdf, AI解析: true, 状态: SUCCESS
2025-10-20 16:01:57 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m11s87ms).
2025-10-20 16:17:55 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m27s927ms).
2025-10-20 16:33:53 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m28s378ms).
2025-10-20 16:49:51 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m28s22ms).
2025-10-20 17:05:19 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m27s954ms).
2025-10-20 17:21:17 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m28s67ms).
2025-10-20 18:53:23 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51m31s503ms).
2025-10-20 20:31:29 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h4m35s439ms).
2025-10-20 21:28:03 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=56m34s65ms).
2025-10-20 22:46:48 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h18m45s184ms).
